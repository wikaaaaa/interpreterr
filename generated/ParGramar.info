-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParGramar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> FnDef                                    (5)
	TopDef -> 'var' Type Item ';'                      (6)
	FnDef -> 'def' Type Ident '(' ListArg ')' Block    (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	Arg -> 'ref' Type Ident                            (11)
	ListArg ->                                         (12)
	ListArg -> Arg                                     (13)
	ListArg -> Arg ',' ListArg                         (14)
	Block -> '{' ListStmt '}'                          (15)
	ListStmt ->                                        (16)
	ListStmt -> Stmt ListStmt                          (17)
	Stmt -> ';'                                        (18)
	Stmt -> Block                                      (19)
	Stmt -> TopDef                                     (20)
	Stmt -> Ident '=' Expr ';'                         (21)
	Stmt -> Ident '++' ';'                             (22)
	Stmt -> Ident '--' ';'                             (23)
	Stmt -> 'return' Expr ';'                          (24)
	Stmt -> 'return' ';'                               (25)
	Stmt -> 'if' '(' Expr ')' Block                    (26)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (27)
	Stmt -> 'while' '(' Expr ')' Block                 (28)
	Stmt -> Expr ';'                                   (29)
	Stmt -> 'break' ';'                                (30)
	Stmt -> 'continue' ';'                             (31)
	Item -> Ident                                      (32)
	Item -> Ident '=' Expr                             (33)
	Type -> 'int'                                      (34)
	Type -> 'string'                                   (35)
	Type -> 'bool'                                     (36)
	Type -> 'void'                                     (37)
	Expr6 -> Ident                                     (38)
	Expr6 -> Integer                                   (39)
	Expr6 -> 'true'                                    (40)
	Expr6 -> 'false'                                   (41)
	Expr6 -> 'fn' Ident '(' ListExpr ')'               (42)
	Expr6 -> String                                    (43)
	Expr6 -> '(' Expr ')'                              (44)
	Expr5 -> '-' Expr6                                 (45)
	Expr5 -> '!' Expr6                                 (46)
	Expr5 -> Expr6                                     (47)
	Expr4 -> Expr4 MulOp Expr5                         (48)
	Expr4 -> Expr5                                     (49)
	Expr3 -> Expr3 AddOp Expr4                         (50)
	Expr3 -> Expr4                                     (51)
	Expr2 -> Expr2 RelOp Expr3                         (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 '&&' Expr1                          (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 '||' Expr                            (56)
	Expr -> Expr1                                      (57)
	ListExpr ->                                        (58)
	ListExpr -> Expr                                   (59)
	ListExpr -> Expr ',' ListExpr                      (60)
	AddOp -> '+'                                       (61)
	AddOp -> '-'                                       (62)
	MulOp -> '*'                                       (63)
	MulOp -> '/'                                       (64)
	MulOp -> '%'                                       (65)
	RelOp -> '<'                                       (66)
	RelOp -> '<='                                      (67)
	RelOp -> '>'                                       (68)
	RelOp -> '>='                                      (69)
	RelOp -> '=='                                      (70)
	RelOp -> '!='                                      (71)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'bool'         { PT _ (TS _ 21) }
	'break'        { PT _ (TS _ 22) }
	'continue'     { PT _ (TS _ 23) }
	'def'          { PT _ (TS _ 24) }
	'else'         { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'fn'           { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'ref'          { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'true'         { PT _ (TS _ 33) }
	'var'          { PT _ (TS _ 34) }
	'void'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	'}'            { PT _ (TS _ 39) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6
	FnDef           rule  7
	ListTopDef      rules 8, 9
	Arg             rules 10, 11
	ListArg         rules 12, 13, 14
	Block           rule  15
	ListStmt        rules 16, 17
	Stmt            rules 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31
	Item            rules 32, 33
	Type            rules 34, 35, 36, 37
	Expr6           rules 38, 39, 40, 41, 42, 43, 44
	Expr5           rules 45, 46, 47
	Expr4           rules 48, 49
	Expr3           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57
	ListExpr        rules 58, 59, 60
	AddOp           rules 61, 62
	MulOp           rules 63, 64, 65
	RelOp           rules 66, 67, 68, 69, 70, 71

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'def'          shift, and enter state 7
	'var'          shift, and enter state 8

	Program        goto state 3
	TopDef         goto state 4
	FnDef          goto state 5
	ListTopDef     goto state 6

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'def'          shift, and enter state 7
	'var'          shift, and enter state 8
	%eof           reduce using rule 8

	TopDef         goto state 4
	FnDef          goto state 5
	ListTopDef     goto state 15

State 5

	TopDef -> FnDef .                                   (rule 5)

	'!'            reduce using rule 5
	'('            reduce using rule 5
	'-'            reduce using rule 5
	';'            reduce using rule 5
	'break'        reduce using rule 5
	'continue'     reduce using rule 5
	'def'          reduce using rule 5
	'false'        reduce using rule 5
	'fn'           reduce using rule 5
	'if'           reduce using rule 5
	'return'       reduce using rule 5
	'true'         reduce using rule 5
	'var'          reduce using rule 5
	'while'        reduce using rule 5
	'{'            reduce using rule 5
	'}'            reduce using rule 5
	L_Ident        reduce using rule 5
	L_integ        reduce using rule 5
	L_quoted       reduce using rule 5
	%eof           reduce using rule 5


State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	FnDef -> 'def' . Type Ident '(' ListArg ')' Block    (rule 7)

	'bool'         shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 14

State 8

	TopDef -> 'var' . Type Item ';'                     (rule 6)

	'bool'         shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 9

State 9

	TopDef -> 'var' Type . Item ';'                     (rule 6)

	L_Ident        shift, and enter state 2

	Ident          goto state 17
	Item           goto state 18

State 10

	Type -> 'bool' .                                    (rule 36)

	L_Ident        reduce using rule 36


State 11

	Type -> 'int' .                                     (rule 34)

	L_Ident        reduce using rule 34


State 12

	Type -> 'string' .                                  (rule 35)

	L_Ident        reduce using rule 35


State 13

	Type -> 'void' .                                    (rule 37)

	L_Ident        reduce using rule 37


State 14

	FnDef -> 'def' Type . Ident '(' ListArg ')' Block    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 16

State 15

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 16

	FnDef -> 'def' Type Ident . '(' ListArg ')' Block    (rule 7)

	'('            shift, and enter state 21


State 17

	Item -> Ident .                                     (rule 32)
	Item -> Ident . '=' Expr                            (rule 33)

	';'            reduce using rule 32
	'='            shift, and enter state 20


State 18

	TopDef -> 'var' Type Item . ';'                     (rule 6)

	';'            shift, and enter state 19


State 19

	TopDef -> 'var' Type Item ';' .                     (rule 6)

	'!'            reduce using rule 6
	'('            reduce using rule 6
	'-'            reduce using rule 6
	';'            reduce using rule 6
	'break'        reduce using rule 6
	'continue'     reduce using rule 6
	'def'          reduce using rule 6
	'false'        reduce using rule 6
	'fn'           reduce using rule 6
	'if'           reduce using rule 6
	'return'       reduce using rule 6
	'true'         reduce using rule 6
	'var'          reduce using rule 6
	'while'        reduce using rule 6
	'{'            reduce using rule 6
	'}'            reduce using rule 6
	L_Ident        reduce using rule 6
	L_integ        reduce using rule 6
	L_quoted       reduce using rule 6
	%eof           reduce using rule 6


State 20

	Item -> Ident '=' . Expr                            (rule 33)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 35

State 21

	FnDef -> 'def' Type Ident '(' . ListArg ')' Block    (rule 7)

	')'            reduce using rule 12
	'bool'         shift, and enter state 10
	'int'          shift, and enter state 11
	'ref'          shift, and enter state 25
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13

	Arg            goto state 22
	ListArg        goto state 23
	Type           goto state 24

State 22

	ListArg -> Arg .                                    (rule 13)
	ListArg -> Arg . ',' ListArg                        (rule 14)

	')'            reduce using rule 13
	','            shift, and enter state 67


State 23

	FnDef -> 'def' Type Ident '(' ListArg . ')' Block    (rule 7)

	')'            shift, and enter state 66


State 24

	Arg -> Type . Ident                                 (rule 10)

	L_Ident        shift, and enter state 2

	Ident          goto state 65

State 25

	Arg -> 'ref' . Type Ident                           (rule 11)

	'bool'         shift, and enter state 10
	'int'          shift, and enter state 11
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13

	Type           goto state 64

State 26

	Expr6 -> Ident .                                    (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 27

	Expr6 -> Integer .                                  (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 28

	Expr6 -> String .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'||'           reduce using rule 43


State 29

	Expr5 -> Expr6 .                                    (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 30

	Expr4 -> Expr5 .                                    (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 31

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr4 .                                    (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 61
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 62
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 63
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 60

State 32

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 58
	','            reduce using rule 53
	'-'            shift, and enter state 59
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 57

State 33

	Expr2 -> Expr2 . RelOp Expr3                        (rule 52)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 50
	'&&'           shift, and enter state 51
	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 52
	'<='           shift, and enter state 53
	'=='           shift, and enter state 54
	'>'            shift, and enter state 55
	'>='           shift, and enter state 56
	'||'           reduce using rule 55

	RelOp          goto state 49

State 34

	Expr -> Expr1 . '||' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'||'           shift, and enter state 48


State 35

	Item -> Ident '=' Expr .                            (rule 33)

	';'            reduce using rule 33


State 36

	Expr5 -> '!' . Expr6                                (rule 46)

	'('            shift, and enter state 37
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 47

State 37

	Expr6 -> '(' . Expr ')'                             (rule 44)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 46

State 38

	Expr5 -> '-' . Expr6                                (rule 45)

	'('            shift, and enter state 37
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 45

State 39

	Expr6 -> 'false' .                                  (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'||'           reduce using rule 41


State 40

	Expr6 -> 'fn' . Ident '(' ListExpr ')'              (rule 42)

	L_Ident        shift, and enter state 2

	Ident          goto state 44

State 41

	Expr6 -> 'true' .                                   (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'||'           reduce using rule 40


State 42

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'||'           reduce using rule 2


State 43

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'||'           reduce using rule 3


State 44

	Expr6 -> 'fn' Ident . '(' ListExpr ')'              (rule 42)

	'('            shift, and enter state 78


State 45

	Expr5 -> '-' Expr6 .                                (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'||'           reduce using rule 45


State 46

	Expr6 -> '(' Expr . ')'                             (rule 44)

	')'            shift, and enter state 77


State 47

	Expr5 -> '!' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'||'           reduce using rule 46


State 48

	Expr -> Expr1 '||' . Expr                           (rule 56)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 76

State 49

	Expr2 -> Expr2 RelOp . Expr3                        (rule 52)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 75

State 50

	RelOp -> '!=' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'fn'           reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 51

	Expr1 -> Expr2 '&&' . Expr1                         (rule 54)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 74

State 52

	RelOp -> '<' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'fn'           reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 53

	RelOp -> '<=' .                                     (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'fn'           reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 54

	RelOp -> '==' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'fn'           reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 55

	RelOp -> '>' .                                      (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'fn'           reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 56

	RelOp -> '>=' .                                     (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'fn'           reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 57

	Expr3 -> Expr3 AddOp . Expr4                        (rule 50)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 73

State 58

	AddOp -> '+' .                                      (rule 61)

	'!'            reduce using rule 61
	'('            reduce using rule 61
	'-'            reduce using rule 61
	'false'        reduce using rule 61
	'fn'           reduce using rule 61
	'true'         reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 59

	AddOp -> '-' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'fn'           reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 60

	Expr4 -> Expr4 MulOp . Expr5                        (rule 48)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 72

State 61

	MulOp -> '%' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'fn'           reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 62

	MulOp -> '*' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'fn'           reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 63

	MulOp -> '/' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'fn'           reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 64

	Arg -> 'ref' Type . Ident                           (rule 11)

	L_Ident        shift, and enter state 2

	Ident          goto state 71

State 65

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 66

	FnDef -> 'def' Type Ident '(' ListArg ')' . Block    (rule 7)

	'{'            shift, and enter state 70

	Block          goto state 69

State 67

	ListArg -> Arg ',' . ListArg                        (rule 14)

	')'            reduce using rule 12
	'bool'         shift, and enter state 10
	'int'          shift, and enter state 11
	'ref'          shift, and enter state 25
	'string'       shift, and enter state 12
	'void'         shift, and enter state 13

	Arg            goto state 22
	ListArg        goto state 68
	Type           goto state 24

State 68

	ListArg -> Arg ',' ListArg .                        (rule 14)

	')'            reduce using rule 14


State 69

	FnDef -> 'def' Type Ident '(' ListArg ')' Block .    (rule 7)

	'!'            reduce using rule 7
	'('            reduce using rule 7
	'-'            reduce using rule 7
	';'            reduce using rule 7
	'break'        reduce using rule 7
	'continue'     reduce using rule 7
	'def'          reduce using rule 7
	'false'        reduce using rule 7
	'fn'           reduce using rule 7
	'if'           reduce using rule 7
	'return'       reduce using rule 7
	'true'         reduce using rule 7
	'var'          reduce using rule 7
	'while'        reduce using rule 7
	'{'            reduce using rule 7
	'}'            reduce using rule 7
	L_Ident        reduce using rule 7
	L_integ        reduce using rule 7
	L_quoted       reduce using rule 7
	%eof           reduce using rule 7


State 70

	Block -> '{' . ListStmt '}'                         (rule 15)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 87
	'break'        shift, and enter state 88
	'continue'     shift, and enter state 89
	'def'          shift, and enter state 7
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'if'           shift, and enter state 90
	'return'       shift, and enter state 91
	'true'         shift, and enter state 41
	'var'          shift, and enter state 8
	'while'        shift, and enter state 92
	'{'            shift, and enter state 70
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 81
	Integer        goto state 27
	String         goto state 28
	TopDef         goto state 82
	FnDef          goto state 5
	Block          goto state 83
	ListStmt       goto state 84
	Stmt           goto state 85
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 86

State 71

	Arg -> 'ref' Type Ident .                           (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 72

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'||'           reduce using rule 48


State 73

	Expr4 -> Expr4 . MulOp Expr5                        (rule 48)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 50)

	'!='           reduce using rule 50
	'%'            shift, and enter state 61
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            shift, and enter state 62
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            shift, and enter state 63
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'||'           reduce using rule 50

	MulOp          goto state 60

State 74

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'||'           reduce using rule 54


State 75

	Expr3 -> Expr3 . AddOp Expr4                        (rule 50)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 52)

	'!='           reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'+'            shift, and enter state 58
	','            reduce using rule 52
	'-'            shift, and enter state 59
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'||'           reduce using rule 52

	AddOp          goto state 57

State 76

	Expr -> Expr1 '||' Expr .                           (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56


State 77

	Expr6 -> '(' Expr ')' .                             (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'||'           reduce using rule 44


State 78

	Expr6 -> 'fn' Ident '(' . ListExpr ')'              (rule 42)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 58
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 79
	ListExpr       goto state 80

State 79

	ListExpr -> Expr .                                  (rule 59)
	ListExpr -> Expr . ',' ListExpr                     (rule 60)

	')'            reduce using rule 59
	','            shift, and enter state 106


State 80

	Expr6 -> 'fn' Ident '(' ListExpr . ')'              (rule 42)

	')'            shift, and enter state 105


State 81

	Stmt -> Ident . '=' Expr ';'                        (rule 21)
	Stmt -> Ident . '++' ';'                            (rule 22)
	Stmt -> Ident . '--' ';'                            (rule 23)
	Expr6 -> Ident .                                    (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           shift, and enter state 102
	'-'            reduce using rule 38
	'--'           shift, and enter state 103
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            shift, and enter state 104
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'||'           reduce using rule 38


State 82

	Stmt -> TopDef .                                    (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'def'          reduce using rule 20
	'false'        reduce using rule 20
	'fn'           reduce using rule 20
	'if'           reduce using rule 20
	'return'       reduce using rule 20
	'true'         reduce using rule 20
	'var'          reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 83

	Stmt -> Block .                                     (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'def'          reduce using rule 19
	'false'        reduce using rule 19
	'fn'           reduce using rule 19
	'if'           reduce using rule 19
	'return'       reduce using rule 19
	'true'         reduce using rule 19
	'var'          reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 84

	Block -> '{' ListStmt . '}'                         (rule 15)

	'}'            shift, and enter state 101


State 85

	ListStmt -> Stmt . ListStmt                         (rule 17)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 87
	'break'        shift, and enter state 88
	'continue'     shift, and enter state 89
	'def'          shift, and enter state 7
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'if'           shift, and enter state 90
	'return'       shift, and enter state 91
	'true'         shift, and enter state 41
	'var'          shift, and enter state 8
	'while'        shift, and enter state 92
	'{'            shift, and enter state 70
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 81
	Integer        goto state 27
	String         goto state 28
	TopDef         goto state 82
	FnDef          goto state 5
	Block          goto state 83
	ListStmt       goto state 100
	Stmt           goto state 85
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 86

State 86

	Stmt -> Expr . ';'                                  (rule 29)

	';'            shift, and enter state 99


State 87

	Stmt -> ';' .                                       (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'def'          reduce using rule 18
	'false'        reduce using rule 18
	'fn'           reduce using rule 18
	'if'           reduce using rule 18
	'return'       reduce using rule 18
	'true'         reduce using rule 18
	'var'          reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 88

	Stmt -> 'break' . ';'                               (rule 30)

	';'            shift, and enter state 98


State 89

	Stmt -> 'continue' . ';'                            (rule 31)

	';'            shift, and enter state 97


State 90

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 26)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 27)

	'('            shift, and enter state 96


State 91

	Stmt -> 'return' . Expr ';'                         (rule 24)
	Stmt -> 'return' . ';'                              (rule 25)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	';'            shift, and enter state 95
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 94

State 92

	Stmt -> 'while' . '(' Expr ')' Block                (rule 28)

	'('            shift, and enter state 93


State 93

	Stmt -> 'while' '(' . Expr ')' Block                (rule 28)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 113

State 94

	Stmt -> 'return' Expr . ';'                         (rule 24)

	';'            shift, and enter state 112


State 95

	Stmt -> 'return' ';' .                              (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'def'          reduce using rule 25
	'false'        reduce using rule 25
	'fn'           reduce using rule 25
	'if'           reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'var'          reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 96

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 26)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 27)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 111

State 97

	Stmt -> 'continue' ';' .                            (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'break'        reduce using rule 31
	'continue'     reduce using rule 31
	'def'          reduce using rule 31
	'false'        reduce using rule 31
	'fn'           reduce using rule 31
	'if'           reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'var'          reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 98

	Stmt -> 'break' ';' .                               (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'def'          reduce using rule 30
	'false'        reduce using rule 30
	'fn'           reduce using rule 30
	'if'           reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'var'          reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 99

	Stmt -> Expr ';' .                                  (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'def'          reduce using rule 29
	'false'        reduce using rule 29
	'fn'           reduce using rule 29
	'if'           reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'var'          reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 100

	ListStmt -> Stmt ListStmt .                         (rule 17)

	'}'            reduce using rule 17


State 101

	Block -> '{' ListStmt '}' .                         (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'def'          reduce using rule 15
	'else'         reduce using rule 15
	'false'        reduce using rule 15
	'fn'           reduce using rule 15
	'if'           reduce using rule 15
	'return'       reduce using rule 15
	'true'         reduce using rule 15
	'var'          reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 102

	Stmt -> Ident '++' . ';'                            (rule 22)

	';'            shift, and enter state 110


State 103

	Stmt -> Ident '--' . ';'                            (rule 23)

	';'            shift, and enter state 109


State 104

	Stmt -> Ident '=' . Expr ';'                        (rule 21)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 108

State 105

	Expr6 -> 'fn' Ident '(' ListExpr ')' .              (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'||'           reduce using rule 42


State 106

	ListExpr -> Expr ',' . ListExpr                     (rule 60)

	'!'            shift, and enter state 36
	'('            shift, and enter state 37
	')'            reduce using rule 58
	'-'            shift, and enter state 38
	'false'        shift, and enter state 39
	'fn'           shift, and enter state 40
	'true'         shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 42
	L_quoted       shift, and enter state 43

	Ident          goto state 26
	Integer        goto state 27
	String         goto state 28
	Expr6          goto state 29
	Expr5          goto state 30
	Expr4          goto state 31
	Expr3          goto state 32
	Expr2          goto state 33
	Expr1          goto state 34
	Expr           goto state 79
	ListExpr       goto state 107

State 107

	ListExpr -> Expr ',' ListExpr .                     (rule 60)

	')'            reduce using rule 60


State 108

	Stmt -> Ident '=' Expr . ';'                        (rule 21)

	';'            shift, and enter state 116


State 109

	Stmt -> Ident '--' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'def'          reduce using rule 23
	'false'        reduce using rule 23
	'fn'           reduce using rule 23
	'if'           reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'var'          reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 110

	Stmt -> Ident '++' ';' .                            (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'def'          reduce using rule 22
	'false'        reduce using rule 22
	'fn'           reduce using rule 22
	'if'           reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'var'          reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 111

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 26)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 27)

	')'            shift, and enter state 115


State 112

	Stmt -> 'return' Expr ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'def'          reduce using rule 24
	'false'        reduce using rule 24
	'fn'           reduce using rule 24
	'if'           reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'var'          reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 113

	Stmt -> 'while' '(' Expr . ')' Block                (rule 28)

	')'            shift, and enter state 114


State 114

	Stmt -> 'while' '(' Expr ')' . Block                (rule 28)

	'{'            shift, and enter state 70

	Block          goto state 118

State 115

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 26)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 27)

	'{'            shift, and enter state 70

	Block          goto state 117

State 116

	Stmt -> Ident '=' Expr ';' .                        (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'def'          reduce using rule 21
	'false'        reduce using rule 21
	'fn'           reduce using rule 21
	'if'           reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'var'          reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 117

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 26)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 27)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'def'          reduce using rule 26
	'else'         shift, and enter state 119
	'false'        reduce using rule 26
	'fn'           reduce using rule 26
	'if'           reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'var'          reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 118

	Stmt -> 'while' '(' Expr ')' Block .                (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'def'          reduce using rule 28
	'false'        reduce using rule 28
	'fn'           reduce using rule 28
	'if'           reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'var'          reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 119

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 27)

	'{'            shift, and enter state 70

	Block          goto state 120

State 120

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'def'          reduce using rule 27
	'false'        reduce using rule 27
	'fn'           reduce using rule 27
	'if'           reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'var'          reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 72
Number of terminals: 42
Number of non-terminals: 26
Number of states: 121
